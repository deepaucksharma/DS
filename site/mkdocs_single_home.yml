site_name: Distributed Systems Architecture Framework v5.0
site_description: The Complete Distributed Systems Architecture Framework - The Definitive Reference
site_author: DS Framework Team
site_url: https://ds-framework.dev

repo_name: ds-framework
repo_url: https://github.com/ds-framework/docs
edit_uri: edit/main/docs/

theme:
  name: material
  palette:
    - scheme: default
      primary: blue
      accent: cyan
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - scheme: slate
      primary: blue
      accent: cyan
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  features:
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.sections
    - navigation.expand
    - navigation.indexes
    - navigation.top
    - search.highlight
    - search.share
    - content.code.copy
    - content.code.annotate
    - content.action.edit

extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/ds-framework
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/ds-framework

markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - admonition
  - pymdownx.details
  - attr_list
  - md_in_html
  - tables
  - footnotes
  - pymdownx.arithmatex:
      generic: true

extra_javascript:
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

nav:
  - Home:
    - Welcome: index.md

    # Getting Started Section
    - Getting Started:
      - Overview: getting-started/overview.md
      - Quick Start: getting-started/quick-start.md
      - Concepts: getting-started/concepts.md

    # Foundation Section
    - Foundation:
      - Universal Laws: foundation/universal-laws.md
      - Capabilities: foundation/capabilities.md
      - Primitives: foundation/primitives.md
      - Guarantees: foundation/guarantees.md
      - Mechanisms: foundation/mechanisms.md

    # Core Guarantees
    - Guarantees:
      - Linearizability:
        - Concept: guarantees/linearizability/linearizability-concept.md
        - Implementation: guarantees/linearizability/linearizability-implementation.md
        - Performance: guarantees/linearizability/linearizability-performance.md
        - Trade-offs: guarantees/linearizability/linearizability-tradeoffs.md
        - Verification: guarantees/linearizability/linearizability-verification.md
        - Failures: guarantees/linearizability/linearizability-failures.md
      - Eventual Consistency:
        - Concept: guarantees/eventual-consistency/eventual-consistency-concept.md
        - Implementation: guarantees/eventual-consistency/eventual-consistency-implementation.md
        - Patterns: guarantees/eventual-consistency/eventual-consistency-patterns.md
        - Conflicts: guarantees/eventual-consistency/eventual-consistency-conflicts.md
        - Examples: guarantees/eventual-consistency/eventual-consistency-examples.md
        - Metrics: guarantees/eventual-consistency/eventual-consistency-metrics.md
      - Exactly Once:
        - Concept: guarantees/exactly-once/exactly-once-concept.md
        - Implementation: guarantees/exactly-once/exactly-once-implementation.md
        - Kafka: guarantees/exactly-once/exactly-once-kafka.md
        - Payments: guarantees/exactly-once/exactly-once-payment.md
        - Failures: guarantees/exactly-once/exactly-once-failures.md
        - Cost: guarantees/exactly-once/exactly-once-cost.md

    # Core Mechanisms
    - Mechanisms:
      - Replication:
        - Strategies: mechanisms/replication/replication-strategies.md
        - Topologies: mechanisms/replication/replication-topologies.md
        - Conflicts: mechanisms/replication/replication-conflicts.md
        - Lag: mechanisms/replication/replication-lag.md
        - MySQL: mechanisms/replication/replication-mysql.md
        - PostgreSQL: mechanisms/replication/replication-postgres.md
      - Load Balancing:
        - Algorithms: mechanisms/load-balancing/load-balancing-algorithms.md
        - Layer 4: mechanisms/load-balancing/load-balancing-layer4.md
        - Layer 7: mechanisms/load-balancing/load-balancing-layer7.md
        - Health: mechanisms/load-balancing/load-balancing-health.md
        - Geographic: mechanisms/load-balancing/load-balancing-geo.md
        - Failures: mechanisms/load-balancing/load-balancing-failures.md
      - Partitioning:
        - Strategies: mechanisms/partitioning/partitioning-strategies.md
        - Consistent Hash: mechanisms/partitioning/partitioning-consistent-hash.md
        - Hotspots: mechanisms/partitioning/partitioning-hotspots.md
        - Resharding: mechanisms/partitioning/partitioning-resharding.md
        - MongoDB: mechanisms/partitioning/partitioning-mongodb.md
        - Cassandra: mechanisms/partitioning/partitioning-cassandra.md
      - Consensus:
        - Raft: mechanisms/consensus/raft-algorithm.md
        - Implementation: mechanisms/consensus/raft-implementation.md
        - vs Paxos: mechanisms/consensus/raft-vs-paxos.md
        - Performance: mechanisms/consensus/raft-performance.md
        - Failures: mechanisms/consensus/raft-failures.md
        - Debugging: mechanisms/consensus/raft-debugging.md
      - Caching:
        - Patterns: mechanisms/caching/caching-patterns.md
        - Invalidation: mechanisms/caching/caching-invalidation.md
        - Consistency: mechanisms/caching/caching-consistency.md
        - Redis: mechanisms/caching/caching-redis.md
        - Memcached: mechanisms/caching/caching-memcached.md

    # Patterns
    - Patterns:
      - Overview: patterns/index.md
      - Production: patterns/production-architecture.md
      - System: patterns/system-patterns.md
      - Micro: patterns/micro-patterns.md
      - Decision: patterns/decision-engine.md
      - Mechanisms: patterns/mechanisms.md
      - Catalog: patterns/pattern-catalog.md

    # Systems Architecture
    - Systems:
      - Netflix:
        - Architecture: systems/netflix/architecture.md
        - Request Flow: systems/netflix/request-flow.md
        - Storage: systems/netflix/storage-architecture.md
        - Failures: systems/netflix/failure-domains.md
        - Scale: systems/netflix/scale-evolution.md
        - Cost: systems/netflix/cost-breakdown.md
        - Novel: systems/netflix/novel-solutions.md
        - Operations: systems/netflix/production-operations.md
      - Uber:
        - Architecture: systems/uber/architecture.md
        - Request Flow: systems/uber/request-flow.md
        - Storage: systems/uber/storage-architecture.md
        - Failures: systems/uber/failure-domains.md
        - Scale: systems/uber/scale-evolution.md
        - Cost: systems/uber/cost-breakdown.md
        - Novel: systems/uber/novel-solutions.md
        - Operations: systems/uber/production-operations.md
      - Amazon:
        - Architecture: systems/amazon/architecture.md
        - Request Flow: systems/amazon/request-flow.md
        - Storage: systems/amazon/storage-architecture.md
        - Failures: systems/amazon/failure-domains.md
        - Scale: systems/amazon/scale-evolution.md
        - Cost: systems/amazon/cost-breakdown.md
        - Novel: systems/amazon/novel-solutions.md
        - Operations: systems/amazon/production-operations.md
      - Google:
        - Architecture: systems/google/architecture.md
        - Request Flow: systems/google/request-flow.md
        - Storage: systems/google/storage-architecture.md
        - Failures: systems/google/failure-domains.md
        - Scale: systems/google/scale-evolution.md
        - Cost: systems/google/cost-breakdown.md
        - Novel: systems/google/novel-solutions.md
        - Operations: systems/google/production-operations.md
      - Meta:
        - Architecture: systems/meta/architecture.md
        - Request Flow: systems/meta/request-flow.md
        - Storage: systems/meta/storage-architecture.md
        - Failures: systems/meta/failure-domains.md
        - Scale: systems/meta/scale-evolution.md
        - Cost: systems/meta/cost-breakdown.md
        - Novel: systems/meta/novel-solutions.md
        - Operations: systems/meta/production-operations.md
      - LinkedIn:
        - Architecture: systems/linkedin/architecture.md
        - Request Flow: systems/linkedin/request-flow.md
        - Storage: systems/linkedin/storage-architecture.md
        - Failures: systems/linkedin/failure-domains.md
        - Scale: systems/linkedin/scale-evolution.md
        - Cost: systems/linkedin/cost-breakdown.md
        - Novel: systems/linkedin/novel-solutions.md
        - Operations: systems/linkedin/production-operations.md
      - Stripe:
        - Architecture: systems/stripe/architecture.md
        - Request Flow: systems/stripe/request-flow.md
        - Storage: systems/stripe/storage-architecture.md
        - Failures: systems/stripe/failure-domains.md
        - Scale: systems/stripe/scale-evolution.md
        - Cost: systems/stripe/cost-breakdown.md
        - Novel: systems/stripe/novel-solutions.md
        - Operations: systems/stripe/production-operations.md
      - Spotify:
        - Architecture: systems/spotify/architecture.md
        - Request Flow: systems/spotify/request-flow.md
        - Storage: systems/spotify/storage-architecture.md
        - Failures: systems/spotify/failure-domains.md
        - Scale: systems/spotify/scale-evolution.md
        - Cost: systems/spotify/cost-breakdown.md
        - Novel: systems/spotify/novel-solutions.md
        - Operations: systems/spotify/production-operations.md
      - Others:
        - Airbnb: systems/airbnb/architecture.md
        - Discord: systems/discord/architecture.md
        - Cloudflare: systems/cloudflare/architecture.md
        - Shopify: systems/shopify/architecture.md
        - Twitter: systems/twitter/architecture.md
        - Microsoft: systems/microsoft/architecture.md
        - Zoom: systems/zoom/architecture.md

    # Incidents
    - Incidents:
      - AWS S3 2017: incidents/aws-s3-2017.md
      - Cloudflare 2019: incidents/cloudflare-2019.md
      - Fastly 2021: incidents/fastly-2021.md
      - GitHub 2018: incidents/github-2018.md
      - Slack 2022: incidents/slack-2022.md
      - AWS US-East 2021: incidents/aws-us-east-1-2021.md
      - Azure AD 2021: incidents/azure-ad-march-2021.md
      - Alibaba 2023: incidents/alibaba-cloud-2023.md
      - Google Cloud 2021: incidents/google-cloud-november-2021.md
      - Oracle 2022: incidents/oracle-cloud-2022.md
      - Coinbase 2021: incidents/coinbase-may-2021.md
      - Robinhood 2021: incidents/robinhood-january-2021.md
      - Stripe 2023: incidents/stripe-july-2023.md
      - PayPal 2022: incidents/paypal-november-2022.md
      - Visa 2021: incidents/visa-june-2021.md
      - Discord 2024: incidents/discord-march-2024.md
      - Zoom 2020: incidents/zoom-august-2020.md
      - Teams 2023: incidents/teams-january-2023.md
      - WhatsApp 2022: incidents/whatsapp-october-2022.md
      - Netflix 2022: incidents/netflix-december-2022.md
      - Netflix 2023: incidents/netflix-dec-2023-outage.md
      - Spotify 2024: incidents/spotify-march-2024.md
      - DoorDash 2023: incidents/doordash-july-2023.md
      - Shopify 2022: incidents/shopify-black-friday-2022.md
      - Uber 2023: incidents/uber-march-2023.md
      - Reddit 2023: incidents/reddit-march-2023.md
      - Response Patterns:
        - Circuit Breakers: incidents/response-patterns/cascading-failures/circuit-breaker-patterns.md
        - Cache Stampede: incidents/response-patterns/cascading-failures/cache-stampede-response.md
        - Retry Storms: incidents/response-patterns/cascading-failures/retry-storm-prevention.md
        - Service Cascades: incidents/response-patterns/cascading-failures/service-cascade-detection.md
        - Split Brain: incidents/response-patterns/cascading-failures/split-brain-detection.md
        - Conflict Resolution: incidents/response-patterns/data-consistency/conflict-resolution-patterns.md
        - Data Corruption: incidents/response-patterns/data-consistency/data-corruption-detection.md
        - Consistency Failures: incidents/response-patterns/data-consistency/eventual-consistency-failures.md
        - Replication Lag: incidents/response-patterns/data-consistency/replication-lag-recovery.md
        - Transaction Isolation: incidents/response-patterns/data-consistency/transaction-isolation-failures.md
        - Consensus Failures: incidents/response-patterns/distributed-systems/consensus-algorithm-failures.md
        - Deadlock Resolution: incidents/response-patterns/distributed-systems/distributed-deadlock-resolution.md
        - Load Balancer Failures: incidents/response-patterns/distributed-systems/load-balancer-failures.md
        - Network Partitions: incidents/response-patterns/distributed-systems/network-partition-handling.md
        - Service Mesh: incidents/response-patterns/distributed-systems/service-mesh-failures.md
        - Memory Leaks: incidents/response-patterns/resource-exhaustion/memory-leak-detection.md
        - CPU Spikes: incidents/response-patterns/resource-exhaustion/cpu-spike-response.md
        - Connection Exhaustion: incidents/response-patterns/resource-exhaustion/database-connection-exhaustion.md
        - Disk Space: incidents/response-patterns/resource-exhaustion/disk-space-exhaustion.md
        - Network Saturation: incidents/response-patterns/resource-exhaustion/network-bandwidth-saturation.md

    # Debugging
    - Debugging:
      - CPU Diagnosis: debugging/cpu-spike-diagnosis.md
      - Memory Leaks: debugging/memory-leak-detection.md
      - Network Issues: debugging/network-issues-troubleshooting.md
      - High Latency: debugging/high-latency-investigation.md
      - Latency Spikes: debugging/latency-spike-investigation.md
      - Bottlenecks: debugging/performance-bottleneck-identification.md
      - Resource Exhaustion: debugging/resource-exhaustion-diagnosis.md
      - Slow Queries: debugging/slow-query-analysis.md
      - Throughput: debugging/throughput-degradation.md
      - Timeouts: debugging/timeout-and-retry-tuning.md
      - Data Inconsistency: debugging/data-inconsistency-detection.md
      - Inconsistency Resolution: debugging/data-inconsistency-resolution.md
      - Container Issues: debugging/container-orchestration-issues.md
      - Load Balancers: debugging/load-balancer-health-check-debugging.md
      - Message Queues: debugging/message-queue-backlog-debugging.md
      - DNS Issues: debugging/dns-resolution-issues-debugging.md
      - Connection Pools: debugging/database-connection-pool-debugging.md
      - Distributed Tracing: debugging/distributed-tracing-analysis.md
      - Circuit Breakers: debugging/circuit-breaker-failure-debugging.md
      - Log Correlation: debugging/log-correlation-services.md
      - Service Discovery: debugging/service-discovery-failures.md
      - Service Dependencies: debugging/service-dependency-mapping.md
      - Split Brain: debugging/split-brain-recovery.md
      - Timeout Cascades: debugging/timeout-cascade-debugging.md
      - Cascading Failures: debugging/cascading-failure-prevention.md
      - Error Surges: debugging/error-rate-surge-debugging.md
      - Anomaly Detection: debugging/metric-anomaly-detection.md
      - Security Incidents: debugging/security-incident-response-debugging.md
      - Capacity Planning: debugging/capacity-planning-debugging.md
      - Cache Storms: debugging/cache-miss-storm-investigation.md

    # Performance
    - Performance:
      - MySQL: performance/mysql-performance-profile.md
      - PostgreSQL: performance/postgresql-performance-profile.md
      - MongoDB: performance/mongodb-performance-profile.md
      - Redis: performance/redis-performance-profile.md
      - Cassandra: performance/cassandra-performance-profile.md
      - DynamoDB: performance/dynamodb-query-optimization.md
      - JVM GC: performance/jvm-gc-optimization.md
      - Go Goroutines: performance/golang-goroutine-optimization.md
      - Tomcat: performance/tomcat-connector-optimization.md
      - HikariCP: performance/hikaricp-connection-pool-tuning.md
      - REST API: performance/rest-api-performance-profile.md
      - GraphQL: performance/graphql-performance-profile.md
      - gRPC: performance/grpc-performance-profile.md
      - WebSocket: performance/websocket-performance-profile.md
      - AWS ALB: performance/aws-alb-optimization.md
      - CloudFront: performance/cloudfront-cdn-optimization.md
      - Nginx: performance/nginx-async-optimization.md
      - Serverless: performance/serverless-performance-profile.md
      - Kafka: performance/kafka-performance-profile.md
      - Kafka Batch: performance/kafka-batch-processing.md
      - RabbitMQ: performance/rabbitmq-performance-profile.md
      - NATS: performance/nats-performance-profile.md
      - Pulsar: performance/pulsar-performance-profile.md
      - SQS/SNS: performance/sqs-sns-performance-profile.md
      - Redis Cache: performance/redis-cache-hit-optimization.md
      - Memcached: performance/memcached-cluster-optimization.md
      - Facebook TAO: performance/facebook-tao-cache-optimization.md

    # Scaling
    - Scaling:
      - Instagram: scaling/instagram-evolution.md
      - WhatsApp: scaling/whatsapp-evolution.md
      - Twitter Journey: scaling/twitter-scale-journey.md
      - Discord Journey: scaling/discord-scale-journey.md
      - Discord Evolution: scaling/discord-evolution.md
      - Shopify: scaling/shopify-evolution.md
      - Twitter Evolution: scaling/twitter-evolution.md
      - Reddit: scaling/reddit-evolution.md
      - Twitch: scaling/twitch-evolution.md
      - Pinterest: scaling/pinterest-evolution.md

    # Migrations
    - Migrations:
      - Overview: migrations/index.md
      - MySQL to Aurora: migrations/mysql-to-aurora.md
      - PostgreSQL to DynamoDB: migrations/postgresql-to-dynamodb.md
      - Kafka to Kinesis: migrations/kafka-to-kinesis.md
      - Monolith to Microservices: migrations/monolith-to-microservices.md
      - On-premise to Cloud: migrations/on-premise-to-cloud.md
      - Uber Transformation: migrations/uber-monolith-to-microservices.md
      - Uber Evolution: migrations/uber-microservices.md
      - LinkedIn Kafka: migrations/linkedin-kafka-evolution.md

    # Capacity
    - Capacity:
      - Database: capacity/database-capacity-planning.md
      - Redis: capacity/redis-memory-planning.md
      - Elasticsearch: capacity/elasticsearch-cluster-sizing.md
      - Kafka: capacity/kafka-cluster-sizing.md
      - Kubernetes: capacity/kubernetes-cluster-capacity.md
      - API Gateway: capacity/api-gateway-capacity.md
      - Load Balancers: capacity/load-balancer-capacity.md
      - Message Queues: capacity/message-queue-sizing.md
      - CDN: capacity/cdn-capacity-planning.md
      - Serverless: capacity/serverless-capacity-planning.md
      - Netflix Surges: capacity/netflix-show-release-surge.md
      - Black Friday: capacity/amazon-black-friday-capacity.md
      - Zoom COVID: capacity/zoom-covid-explosion.md

    # Costs
    - Costs:
      - Netflix: costs/netflix-infrastructure-breakdown.md
      - Netflix $500M: costs/netflix-infrastructure-500m.md
      - Spotify: costs/spotify-infrastructure-breakdown.md
      - Airbnb: costs/airbnb-infrastructure-breakdown.md
      - Cloudflare: costs/cloudflare-infrastructure-breakdown.md
      - Dropbox: costs/dropbox-infrastructure-breakdown.md
      - GitHub: costs/github-infrastructure-breakdown.md
      - Pinterest: costs/pinterest-infrastructure-breakdown.md
      - Slack: costs/slack-infrastructure-breakdown.md

    # Comparisons
    - Comparisons:
      - PostgreSQL vs DynamoDB: comparisons/postgresql-vs-dynamodb.md
      - Redis vs Memcached: comparisons/redis-vs-memcached.md
      - MongoDB vs Cassandra: comparisons/mongodb-vs-cassandra.md
      - MySQL vs PostgreSQL: comparisons/mysql-vs-postgresql.md
      - Kafka vs Kinesis: comparisons/kafka-vs-kinesis.md
      - Kafka vs Kinesis vs Pulsar: comparisons/kafka-vs-kinesis-vs-pulsar.md
      - REST vs GraphQL vs gRPC: comparisons/rest-vs-graphql-vs-grpc.md
      - AWS vs GCP vs Azure: comparisons/aws-vs-gcp-vs-azure.md
      - Kubernetes vs Mesos vs Nomad: comparisons/kubernetes-vs-mesos-vs-nomad.md

    # Case Studies
    - Case Studies:
      - Overview: case-studies/index.md
      - Netflix: case-studies/netflix.md
      - Uber: case-studies/uber.md
      - Framework: case-studies/framework.md
      - Data Collection: case-studies/data-collection-framework.md
      - Comparison Matrices: case-studies/comparison-matrices.md

    # Examples
    - Examples:
      - Case Studies: examples/case-studies.md
      - Implementation: examples/implementation.md
      - Pitfalls: examples/pitfalls.md

    # Production
    - Production:
      - Reality Check: production/reality.md
      - Best Practices: production/best-practices.md
      - Proof Obligations: production/proof-obligations.md

    # Reference
    - Reference:
      - API Reference: reference/api.md
      - Glossary: reference/glossary.md
      - Further Reading: reference/reading.md
      - Color Comparison: color-comparison.md
      - Mermaid Style Guide: mermaid-style-guide.md
      - Incident Templates: diagrams/INCIDENT_RESPONSE_TEMPLATES.md

plugins:
  - search
  - mermaid2:
      arguments:
        theme: |
          ^(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'default'
        themeVariables:
          primaryColor: '#3B82F6'
          primaryTextColor: '#ffffff'
          primaryBorderColor: '#2563EB'
          lineColor: '#333333'
          secondaryColor: '#10B981'
          tertiaryColor: '#F59E0B'
          background: '#ffffff'
          mainBkg: '#3B82F6'
          secondBkg: '#10B981'
          tertiaryBkg: '#F59E0B'
          quartBkg: '#8B5CF6'
          fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'
          fontSize: '14px'
          nodeBorder: '#333333'
          clusterBkg: '#f5f5f5'
          clusterBorder: '#999999'
          edgeLabelBackground: '#ffffff'
          actorBorder: '#0066CC'
          actorBkg: '#ECF4FF'
          actorTextColor: '#333333'
          actorLineColor: '#333333'
          gridColor: '#e0e0e0'
          doneTaskBkgColor: '#4CAF50'
          doneTaskBorderColor: '#388E3C'
          activeTaskBkgColor: '#FF9800'
          activeTaskBorderColor: '#F57C00'
  - panzoom